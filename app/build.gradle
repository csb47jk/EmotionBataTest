apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.csb47jk.emotionbatatest"
        minSdkVersion 22
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a'
            universalApk true
        }
    }
}

dependencies {
    implementation('com.affectiva.android:affdexsdk:3.+')          //1.0 Add Affective
    implementation ('org.tensorflow:tensorflow-android:+')           //1.0  Add TensorFlow
     fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

// build a signed release apk only if the environment is configured
// with the properties that let us access the keystore.  you can put
// them into ~/.gradle/gradle.properties
if (project.hasProperty('releaseKeystoreFile')) {
    android.signingConfigs {
        release {
            storeFile file(releaseKeystoreFile)
            storePassword releaseKeystorePassword
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
        }
    }
    android.buildTypes.release.signingConfig = android.signingConfigs.release
}
